create or replace 
PROCEDURE FosterCare_Given_CONCERNROLEID
(
 i_concernroleid        IN /* schemaname */ CASEHEADER.CONCERNROLEID%TYPE,
 i_debug_print          IN                  INTEGER DEFAULT 0, /* 0 ==> don't print, 1 ==> print */
 i_add_header           IN                  INTEGER DEFAULT 1, /* 0 ==> no header, 1 ==> add header */
 i_output_format        IN                  INTEGER DEFAULT 1, /* 1 ==> XML, 2 ==> pipe-delimited */
 o_response_code        OUT                 VARCHAR2,
 o_response_text        OUT                 VARCHAR2,
 o_user_details_CLOB    OUT                 CLOB  
)
IS
BEGIN
DECLARE
--  tabs                        tabsarray;
  crlf                          VARCHAR2(2) := chr(13)||chr(10);
  i                             INTEGER;
  RC                            varchar2(30);
  RM                            varchar2(1000);
  v_ret                         CLOB;
  i_IC                          CASEHEADER.CASEREFERENCE%TYPE;
  l_IC                          CASEHEADER.CASEREFERENCE%TYPE;
  l_concernroleid               CASEHEADER.CONCERNROLEID%TYPE;
  l_caseid                      CASEHEADER.CASEID%TYPE;
  l_evidenceid                  DYNAMICEVIDENCEDATAATTRIBUTE.EVIDENCEID%TYPE;
  l_caseparticipantroleid       NUMBER := NULL;
  l_dob                         CHAR(8) := '';
  l_firstname                   VARCHAR2(65) := '';
  l_lastname                    VARCHAR2(65) := '';
  l_planID                      VARCHAR2(25) := '';
  l_personCost                  VARCHAR2(25) := '';
  l_planCost                    VARCHAR2(25) := '';
  l_employerName                VARCHAR2(65) := '';
  l_employerID                  VARCHAR2(65) := '';
  l_planExists                  VARCHAR2(6) := '';
  l_planCoverage                VARCHAR2(65) := '';
  l_costFrequency               VARCHAR2(20) := '';
  l_planMEC                     VARCHAR2(6) := '';
  l_enrollmentStatusCode        VARCHAR2(10) := '';
  l_eligibleForESI              VARCHAR2(10) := '';
  l_enrollmentStatus            VARCHAR2(20) := '';
  l_issingleevidence            BOOLEAN;
  evidenceFound                 BOOLEAN;
  l_successionid                NUMBER := NULL;
  l_effectivefrom               DATE;
  nextEndDate                   VARCHAR2(4000) := '';
  l_first_of_the_year           VARCHAR2(30);
  l_CONCERN_ROLE_ID             CASEHEADER.CONCERNROLEID%TYPE;
  l_EVIDENCE_STATUS             VARCHAR2(10) := '';
  l_EFFECTIVE_FROM_DATE         DATE;
  l_START_DATE                  DATE;
  l_END_DATE                    DATE;
  l_Coverage_Status             VARCHAR2(10) := '';
  l_Is_Minimum_Value_Met        VARCHAR2(6) := '';
  l_Is_Emp_In_Waiting_Period    VARCHAR2(6) := '';
  l_Employee_Contribution       VARCHAR2(25) := '';
  l_planName                    VARCHAR2(65) := '';
  l_Contribution_Frequency      VARCHAR2(15) := '';
  l_Employer_ID                 VARCHAR2(65) := '';
  l_Employer_Name               VARCHAR2(65) := '';
  l_participant_eligible        VARCHAR2(5) := 'Yes'; /* Assume so */
  TYPE char_table_type IS VARRAY(40) OF CASEHEADER.CASEREFERENCE%TYPE;
  TYPE char_table_type2 IS VARRAY(40) OF VARCHAR2(100);
  TYPE numbers_table_type IS VARRAY(40) OF NUMBER;
  TYPE dates_table_type   IS VARRAY(40) OF DATE;
  l_caseidarray                 numbers_table_type;
  l_casereferencearray          char_table_type;
  l_statuscodearray             char_table_type;
  l_receiveddatearray           dates_table_type;
  l_successionidarray           numbers_table_type;
  l_correctionsetidarray        char_table_type;
  l_evidenceidarray             numbers_table_type;
  l_evidenceidarray_tmp         numbers_table_type;
  l_effectivefromarray          dates_table_type;
  l_participantarray            numbers_table_type;
  l_caseparticipantarray        numbers_table_type;
  l_rankarray                   numbers_table_type;
  l_rankarrayx                  numbers_table_type;
  l_fieldarray                  char_table_type2;
  l_participant                 NUMBER;
  l_coverageType                VARCHAR2(100);
  l_ageWhenLeavingFosterCare    VARCHAR2(20);
  l_comments                    VARCHAR2(1000);
  l_enrolledOnMedicaid          VARCHAR2(10);
  l_fosterCareState             VARCHAR2(20);
  l_isFosterCareVerified        VARCHAR2(10);
  l_pregnancyEndDate            VARCHAR2(20);
  ins_incomeDescription         VARCHAR2(100);
  ins_frequency                 VARCHAR2(100);
  relatedFilers                 VARCHAR2(1000);
  ins_comments                  VARCHAR2(4000) := '';
  ins_endDate                   VARCHAR2(4000) := '';
  ins_incomeType                VARCHAR2(4000) := '';
  ins_taxformType               VARCHAR2(4000) := '';
  ins_state                     VARCHAR2(4000) := '';
  ins_street2                   VARCHAR2(4000) := '';
  ins_zipCode                   VARCHAR2(4000) := '';
  ins_employer                  VARCHAR2(4000) := '';
  ins_source                    VARCHAR2(4000) := '';
  ins_frequencyCode             VARCHAR2(4000) := '';
  ins_city                      VARCHAR2(4000) := '';
  ins_amount                    VARCHAR2(4000) := '';
  ins_caseParticipantRoleID     VARCHAR2(4000) := '';
  ins_street1                   VARCHAR2(4000) := '';
  ins_zipCodePlusFour           VARCHAR2(4000) := '';
  ins_employerName              VARCHAR2(4000) := '';
  ins_seasonalIncomeInd         VARCHAR2(4000) := '';
  ins_suiteNum                  VARCHAR2(4000) := '';
  ins_incomeID                  VARCHAR2(4000) := '';
  ins_startDate                 VARCHAR2(4000) := '';
  ins_taxExemptAmount           VARCHAR2(4000) := '';
    
BEGIN
  l_evidenceidarray := numbers_table_type(100); /* initialize */
  l_evidenceidarray_tmp := numbers_table_type(100); /* initialize */
  l_concernroleid := i_concernroleid;
IF i_debug_print > 0 THEN dbms_output.put_line('START - params: i_concernroleid='||i_concernroleid||' i_debug_print='||i_debug_print||' i_add_header='||i_add_header||' i_output_format='||i_output_format); END IF;

/* Find ALL cases this concernroleid is involved in - other concernroleids may be found */
  SELECT DISTINCT CPR.PARTICIPANTROLEID, CH.CASEREFERENCE, CH.CASEID BULK COLLECT INTO l_participantarray, l_casereferencearray, l_caseidarray 
    FROM CASEHEADER CH, CASEPARTICIPANTROLE CPR WHERE CH.CASEREFERENCE IN (SELECT DISTINCT CH.CASEREFERENCE FROM CASEHEADER CH, CASEPARTICIPANTROLE CPR 
    WHERE CPR.PARTICIPANTROLEID = l_concernroleid AND CH.CASEID = CPR.CASEID AND CPR.TYPECODE IN ('PRI', 'MEM') AND CH.CASETYPECODE = 'CT5' /* Integrated Case */ AND CH.STATUSCODE = 'CS4'/* OPEN */) 
          AND CPR.TYPECODE IN ('PRI', 'MEM') AND CH.CASEID = CPR.CASEID AND CH.CASETYPECODE = 'CT5' /* Integrated Case */ AND CH.STATUSCODE = 'CS4'/* OPEN */ ;  

IF i_debug_print > 0 THEN dbms_output.put_line('l_casereferencearray.count='||l_casereferencearray.count); END IF;
  CASE 
     WHEN l_casereferencearray.count = 0 THEN 
        o_response_code := 'NO_DATA_FOUND'; 
        o_response_text := 'No IC found for input concernroleid: ' || l_concernroleid; 
        l_IC := 'NO ICs';        
     WHEN l_casereferencearray.count >= 1 THEN
IF i_debug_print > 0 THEN dbms_output.put_line('l_concernroleid='||l_concernroleid); END IF;
IF i_debug_print > 0 THEN
  FOR i IN 1..l_casereferencearray.count
  LOOP
    dbms_output.put_line('l_casereferencearray('||i||')='||l_casereferencearray(i));
    dbms_output.put_line('l_participantarray('||i||')='||l_participantarray(i));
    dbms_output.put_line('l_caseidarray('||i||')='||l_caseidarray(i));
  END LOOP;
END IF;
        FOR j IN 1..l_casereferencearray.count /* find caseid that matches input concernroleid and yields results */
        LOOP
IF i_debug_print > 0 THEN dbms_output.put_line('In loop l_concernroleid='||l_concernroleid||' l_participantarray(='||j||')='||l_participantarray(j)); END IF;
          IF l_participantarray(j) <> l_concernroleid THEN 
            CONTINUE;
          ELSE 
            IF o_response_text IS NULL THEN 
              o_response_text := l_casereferencearray(j);
            ELSE
              o_response_text := o_response_text || ', ' || l_casereferencearray(j);
            END IF;
            l_caseid := l_caseidarray(j);
            l_IC := o_response_text;
          END IF;
IF i_debug_print > 0 THEN dbms_output.put_line('l_IC='||l_IC||' l_caseid='||l_caseid||' l_concernroleid='||l_concernroleid); END IF;

          SELECT ED.SUCCESSIONID, ED.STATUSCODE, ED.RECEIVEDDATE, ED.CORRECTIONSETID, TO_DATE(TO_CHAR(EFFECTIVEFROM, 'YYYYMMDD'), 'YYYYMMDD'), RELATEDID, DENSE_RANK() OVER (PARTITION BY ED.SUCCESSIONID 
            ORDER BY ED.SUCCESSIONID, NVL(ED.EFFECTIVEFROM,TO_DATE('00010101', 'YYYYMMDD')) DESC) Succession_Rank 
            BULK COLLECT INTO l_successionidarray, l_statuscodearray, l_receiveddatearray, l_correctionsetidarray, l_effectivefromarray, l_evidenceidarray, l_rankarray
            FROM EVIDENCEDESCRIPTOR ED WHERE ED.PARTICIPANTID = l_concernroleid and ED.CASEID = l_caseid and ED.EVIDENCETYPE IN ('DET0026063' /* FosterCare */) AND ED.STATUSCODE = 'EDS1';

IF i_debug_print > 0 THEN dbms_output.put_line('DEBUGEVIDENCEDESCRIPTOR1: l_evidenceidarray.count= '||l_evidenceidarray.count); END IF;
          FOR i IN 1..l_evidenceidarray.count
          LOOP
IF i_debug_print > 0 THEN dbms_output.put_line('l_rankarray('||i||')='||l_rankarray(i)); END IF;
IF i_debug_print > 0 THEN dbms_output.put_line('l_successionidarray('||i||')='||l_successionidarray(i)); END IF;
IF i_debug_print > 0 THEN dbms_output.put_line('l_effectivefromarray('||i||')='||l_effectivefromarray(i)); END IF;
IF i_debug_print > 0 THEN dbms_output.put_line('l_evidenceidarray('||i||')='||l_evidenceidarray(i)); END IF;
        /* Search for DET0026008 (Pregnancy data) using the evidenceid */
            BEGIN SELECT VALUE INTO l_ageWhenLeavingFosterCare FROM DYNAMICEVIDENCEDATAATTRIBUTE WHERE EVIDENCEID = l_evidenceidarray(i) AND NAME =  'ageWhenLeavingFosterCare';
            EXCEPTION WHEN NO_DATA_FOUND 
            THEN
IF i_debug_print > 0 THEN dbms_output.put_line('SELECT VALUE INTO dueDate FROM DYNAMICEVIDENCEDATAATTRIBUTE failed'); END IF; 
              l_ageWhenLeavingFosterCare := NULL;
            END; --Do nothing            
            IF l_ageWhenLeavingFosterCare IS NOT NULL 
            THEN 
IF i_debug_print > 0 THEN dbms_output.put_line('l_ageWhenLeavingFosterCare='||l_ageWhenLeavingFosterCare); END IF;
              BEGIN SELECT VALUE INTO l_fosterCareState FROM DYNAMICEVIDENCEDATAATTRIBUTE WHERE EVIDENCEID = l_evidenceidarray(i) AND NAME =  'fosterCareState';
                EXCEPTION WHEN NO_DATA_FOUND THEN null; END; --Do nothing
              BEGIN SELECT VALUE INTO l_comments FROM DYNAMICEVIDENCEDATAATTRIBUTE WHERE EVIDENCEID = l_evidenceidarray(i) AND NAME =  'comments';
                EXCEPTION WHEN NO_DATA_FOUND THEN null; END; --Do nothing
              BEGIN SELECT VALUE INTO l_enrolledOnMedicaid FROM DYNAMICEVIDENCEDATAATTRIBUTE WHERE EVIDENCEID = l_evidenceidarray(i) AND NAME =  'enrolledOnMedicaid';
                EXCEPTION WHEN NO_DATA_FOUND THEN null; END; --Do nothing
              BEGIN SELECT VALUE INTO l_isFosterCareVerified FROM DYNAMICEVIDENCEDATAATTRIBUTE WHERE EVIDENCEID = l_evidenceidarray(i) AND NAME =  'isFosterCareVerified';
                EXCEPTION WHEN NO_DATA_FOUND THEN null; END; --Do nothing
              BEGIN SELECT TO_CHAR(TO_DATE(VALUE, 'YYYYMMDD'), 'YYYYMMDD') INTO ins_startDate FROM DYNAMICEVIDENCEDATAATTRIBUTE WHERE EVIDENCEID = l_evidenceidarray(i) AND NAME =  'startDate';
                EXCEPTION WHEN NO_DATA_FOUND THEN null; END; --Do nothing
IF i_debug_print > 0 AND l_effectivefromarray(i) IS NOT NULL THEN dbms_output.put_line('ins_startDate0/l_effectivefromarray(i)='||TO_CHAR(TO_DATE(ins_startDate, 'YYYYMMDD'), 'YYYYMMDD')||'/'||TO_CHAR(TO_DATE(l_effectivefromarray(i), 'YYYYMMDD'), 'YYYYMMDD')); END IF;
              IF (l_effectivefromarray(i) IS NOT NULL AND l_effectivefromarray(i) <> TO_DATE('00010101', 'YYYYMMDD')) THEN ins_startDate := TO_CHAR(l_effectivefromarray(i), 'YYYYMMDD'); END IF; /* 20170920, George Gluck, Fix to use sucessionid rank properly */
IF i_debug_print > 0 THEN dbms_output.put_line('ins_startDate1='||TO_CHAR(TO_DATE(ins_startDate, 'YYYYMMDD'), 'YYYYMMDD')); END IF;
IF i_debug_print > 0 THEN dbms_output.put_line('TO_CHAR(TO_DATE(ins_startDate) - 1)='||TO_CHAR(TO_DATE(ins_startDate, 'YYYYMMDD') - 1, 'YYYYMMDD')); END IF;
             BEGIN SELECT VALUE INTO ins_endDate FROM DYNAMICEVIDENCEDATAATTRIBUTE WHERE EVIDENCEID = l_evidenceidarray(i) AND NAME =  'endDate';
              EXCEPTION WHEN NO_DATA_FOUND THEN null; END; --Do nothing
              IF l_rankarray(i) > 1 THEN ins_endDate := nextEndDate; END IF; /* 20170920, George Gluck, Fix to use sucessionid rank properly */
              nextEndDate :=TO_CHAR(TO_DATE(ins_startDate, 'YYYYMMDD') - 1, 'YYYYMMDD'); /* 20170920, George Gluck, Fix to use sucessionid rank properly */
IF i_debug_print > 0 THEN dbms_output.put_line('l_rankarray('||i||')/ins_endDate/nextEndDate='||l_rankarray(i)||'/'||ins_endDate||'/'||nextEndDate); END IF;

              IF i_output_format = 1 THEN /* XML */
                o_user_details_CLOB :=  o_user_details_CLOB || 
                              '<fostercare>' ||
                              '<comments>'||l_comments||'</comments>'||
                              '<ageWhenLeavingFosterCare>'||SUBSTR(l_ageWhenLeavingFosterCare, 8, 2)||'</ageWhenLeavingFosterCare>'||
                              '<enrolledOnMedicaid>'||l_enrolledOnMedicaid||'</enrolledOnMedicaid>'||
                              '<isFosterCareVerified>'||l_isFosterCareVerified||'</isFosterCareVerified>'||
                              '<fosterCareState>'||l_fosterCareState||'</fosterCareState>'||
                              '<start_date>'||ins_startDate||'</start_date>'||
                              '<end_date>'||ins_endDate||'</end_date>' ||
                              '</fostercare>';
              ELSE /* pipe-delimited */
                IF i > 1 THEN o_user_details_CLOB := o_user_details_CLOB || crlf; END IF; /* start record on a new line */
                  o_user_details_CLOB :=  o_user_details_CLOB ||
                              l_IC||'|'||
                              i_concernroleid||'|'||
                              l_caseid||'|'||
                              SUBSTR(l_ageWhenLeavingFosterCare, 8, 2)||'|'||
                              l_fosterCareState||'|'||
                              l_comments||'|'||
                              l_enrolledOnMedicaid||'|'||
                              l_isFosterCareVerified||'|'||
                              ins_startDate||'|'||
                              ins_endDate||'|'
                              ;
              END IF; /*  i_output_format = 1 */
            ELSE /* No pregnancy */
              IF i_output_format = 1 THEN /* XML */
                o_user_details_CLOB :=  o_user_details_CLOB ||
                              '<fostercare>' ||
                              '<comments>'||l_comments||'</comments>'||
                              '<ageWhenLeavingFosterCare>'||SUBSTR(l_ageWhenLeavingFosterCare, 8, 2)||'</ageWhenLeavingFosterCare>'||
                              '<enrolledOnMedicaid>'||l_enrolledOnMedicaid||'</enrolledOnMedicaid>'||
                              '<isFosterCareVerified>'||l_isFosterCareVerified||'</isFosterCareVerified>'||
                              '<fosterCareState>'||l_fosterCareState||'</fosterCareState>'||
                              '<start_date>'||ins_startDate||'</start_date>'||
                              '<end_date>'||ins_endDate||'</end_date>' ||
                              '</fostercare>';
              ELSE /* pipe-delimited */
                IF i > 1 THEN o_user_details_CLOB := o_user_details_CLOB || crlf; END IF; /* start record on a new line */
                  o_user_details_CLOB :=  o_user_details_CLOB ||
                              l_IC||'|'||
                              i_concernroleid||'|'||
                              l_caseid||'|'||
                              SUBSTR(l_ageWhenLeavingFosterCare, 8, 2)||'|'||
                              l_fosterCareState||'|'||
                              l_comments||'|'||
                              l_enrolledOnMedicaid||'|'||
                              l_isFosterCareVerified||'|'||
                              ins_startDate||'|'||
                              ins_endDate||'|'
                              ;
              END IF; /*  i_output_format = 1 */
IF i_debug_print > 0 THEN dbms_output.put_line('o_user_details_CLOB='||o_user_details_CLOB); END IF;              
            END IF; /* l_isPregnancy IS NOT NULL */
          END LOOP; /* FOR i IN 1..l_evidenceidarray.count */
IF i_debug_print > 0 THEN dbms_output.put_line('j='||j); END IF;              
        END LOOP; /* FOR j IN 1..l_casereferencearray.count  */
     ELSE o_response_code := 'ERROR'; o_response_text := 'Error : ' || sqlerrm; RETURN;
  END CASE;
  IF l_ageWhenLeavingFosterCare IS NOT NULL /* participant was under fostercare */
  THEN
    o_response_code := 'DATA_FOUND'; 
    o_response_text := 'Foster Care data found for input concernroleid and generated caseid: ' || i_concernroleid || ' ' || l_caseid;
  ELSE
    o_response_code := 'NO_DATA_FOUND'; 
    o_response_text := 'Foster Care data not found for input concernroleid and generated caseid: ' || i_concernroleid || ' ' || l_caseid;
  END IF;
IF i_debug_print > 0 THEN dbms_output.put_line('o_user_details_CLOB1='||o_user_details_CLOB); END IF;
  o_user_details_CLOB := REPLACE(o_user_details_CLOB, '''', '&apos;');
IF i_debug_print > 0 THEN dbms_output.put_line('o_user_details_CLOB2='||o_user_details_CLOB); END IF;
  o_user_details_CLOB := REPLACE(o_user_details_CLOB, '&', '&amp;');
IF i_debug_print > 0 THEN dbms_output.put_line('o_user_details_CLOB3='||o_user_details_CLOB); END IF;
  IF i_output_format = 1 THEN
    IF i_add_header = 1 THEN o_user_details_CLOB := '<?xml version="1.0" standalone="yes"?><participant_fostercare>' || o_user_details_CLOB || '</participant_fostercare>'; END IF;
  END IF;
  RETURN;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
IF i_debug_print > 0 THEN dbms_output.put_line('Error Code:'||SQLCODE||chr(10)||'Error Text:'||SQLERRM); END IF;
END; /* Execution */
END;				 
				